[general]

accounts = gmail, linuxbe
ui = TTYUI
fsync = false
pythonfile =  ~/.offlineimap.py

##################################################
# Accounts
##################################################

[Account gmail]

localrepository = gmail-local
remoterepository = gmail-remote
status_backend = sqlite

[Repository gmail-local]

type = Maildir
localfolders = ~/.mail/douwedebock

nametrans = lambda folder: {'drafts': '[Google Mail]/Drafts',
			    'sent': '[Google Mail]/Sent Mail',
			    'trash': '[Google Mail]/Bin',
			    'archive': '[Google Mail]/All Mail',
			    }.get(folder, folder)

[Repository gmail-remote]

type = Gmail
ssl = yes
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
remoteuser = douwedebock
remotepasseval = subprocess.check_output(["pass", "show", "mail/gmail/douwedebock"]).strip()
maxconnections = 1

nametrans = lambda folder : {'[Google Mail]/Drafts': 'drafts',
			     '[Google Mail]/Sent Mail': 'sent',
			     '[Google Mail]/Bin': 'trash',
			     '[Google Mail]/All Mail': 'archive',
			    }.get(folder, folder)

folderfilter = lambda folder : folder not in ['[Google Mail]/Spam',
					      '[Google Mail]/Important',
					      '[Google Mail]/Starred',
					      'facebook',
					      'GA',
					      'groepsleiding',
					      'groepsleiding/district',
					      'groepsleiding/intern',
					      'virtualWall',
					      ]

[Account linuxbe]

localrepository = linuxbe-local
remoterepository = linuxbe-remote
status_backend = sqlite

[Repository linuxbe-local]

type = Maildir
localfolders = ~/.mail/linuxbe

nametrans = lambda folder: {'drafts': '[Gmail]/Drafts',
			    'sent': '[Gmail]/Sent Mail',
			    'trash': '[Gmail]/Trash',
			    'archive': '[Gmail]/All Mail',
			    }.get(folder, folder)

[Repository linuxbe-remote]

type = Gmail
ssl = yes
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
remoteuser = douwe@linuxbe.com
remotepasseval = subprocess.check_output(["pass", "show", "linuxbe/mail"]).strip()
maxconnections = 1

nametrans = lambda folder : {'[Gmail]/Drafts': 'drafts',
			     '[Gmail]/Sent Mail': 'sent',
			     '[Gmail]/Trash': 'trash',
			     '[Gmail]/All Mail': 'archive',
			    }.get(folder, folder)

folderfilter = lambda folder : folder not in ['[Gmail]/Spam',
					      '[Gmail]/Important',
					      '[Gmail]/Starred',
					      ]
